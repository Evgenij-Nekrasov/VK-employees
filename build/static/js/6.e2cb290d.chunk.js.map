{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/errorBoudary/ErrorBoudary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","loading","request","error","clearError","useHttp","setLoading","useState","setError","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","concat","status","data","json","e","message","_apiBase","_apiKey","_transformCharacter","char","id","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","getAllCharacters","offset","results","map","getCharacter","res","getCharacterByName","getAllComics","getComic","ErrorBoudary","Component","constructor","state","componentDidCatch","errorInfo","console","log","this","setState","render","props","children","AppBanner","_jsxs","className","avengers","avengersLogo","ComicsList","comicsList","setComicsList","newItemLoading","setnewItemLoading","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","arr","item","i","Link","to","renderItems","errorMessage","spinner","Spinner","disabled","onClick","ComicsPage","_Fragment","Helmet","content"],"mappings":"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","file":"static/js/6.e2cb290d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\n\nconst ErrorMessage = () => {\n   return (\n      <img\n         style={{\n            display: \"block\",\n            width: \"250px\",\n            height: \"250px\",\n            objectFit: \"contain\",\n            margin: \"0 auto\",\n         }}\n         src={img}\n         alt=\"Error\"\n      />\n   );\n};\n\nexport default ErrorMessage;\n","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n   const { loading, request, error, clearError } = useHttp();\n\n   const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n   const _apiKey = \"apikey=807256966a9f134988a0a71cdf2ddb6d\";\n   const _baseOffset = 210;\n\n   const getAllCharacters = async (offset = _baseOffset) => {\n      const res = await request(\n         `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n      );\n      return res.data.results.map(_transformCharacter);\n   };\n\n   //Почему здесь данные применяются к _transformCharacter, а выше наоборот\n   const getCharacter = async (id) => {\n      const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n      return _transformCharacter(res.data.results[0]);\n   };\n\n   const getAllComics = async (offset = _baseOffset) => {\n      const res = await request(\n         `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n      );\n      return res.data.results.map(_transformComics);\n   };\n\n   const getComic = async (id) => {\n      const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n      return _transformComics(res.data.results[0]);\n   };\n\n   const getCharacterByName = async (name) => {\n      const res = await request(\n         `${_apiBase}characters?name=${name}&${_apiKey}`\n      );\n      return res.data.results.map(_transformCharacter);\n   };\n\n   const _transformCharacter = (char) => {\n      return {\n         id: char.id,\n         name: char.name,\n         description: char.description\n            ? `${char.description.slice(0, 180)}...`\n            : \"There is no data about this character\",\n         thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n         homepage: char.urls[0].url,\n         wiki: char.urls[1].url,\n         comics: char.comics.items.slice(0, 10),\n      };\n   };\n\n   const _transformComics = (comics) => {\n      return {\n         id: comics.id,\n         title: comics.title,\n         description: comics.description || \"There is no description\",\n         pageCount: comics.pageCount\n            ? `${comics.pageCount} p.`\n            : \"No information about the number of pages\",\n         thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n         language: comics.textObjects[0]?.language || \"en-us\",\n         // optional chaining operator\n         price: comics.prices[0].price\n            ? `${comics.prices[0].price}$`\n            : \"not available\",\n      };\n   };\n\n   return {\n      loading,\n      error,\n      getAllCharacters,\n      getCharacter,\n      getCharacterByName,\n      clearError,\n      getAllComics,\n      getComic,\n   };\n};\n\nexport default useMarvelService;\n","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n   const [loading, setLoading] = useState(false);\n   const [error, setError] = useState(null);\n\n   const request = useCallback(\n      async (\n         url,\n         method = \"GET\",\n         body = null,\n         headers = { \"Content-Type\": \"application/json\" }\n      ) => {\n         setLoading(true);\n\n         try {\n            const response = await fetch(url, { method, body, headers });\n\n            if (!response.ok) {\n               throw new Error(\n                  `Could not fetch ${url}, status: ${response.status}`\n               );\n            }\n\n            const data = await response.json();\n\n            setLoading(false);\n            return data;\n         } catch (e) {\n            setLoading(false);\n            setError(e.message);\n            throw e;\n         }\n      },\n      []\n   );\n   //почему здесь используется useCallback\n   const clearError = useCallback(() => setError(null), []);\n\n   return { loading, request, error, clearError };\n};\n","import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoudary extends Component {\n   state = {\n      error: false,\n   };\n\n   componentDidCatch(error, errorInfo) {\n      console.log(error, errorInfo);\n      this.setState({\n         error: true,\n      });\n   }\n\n   render() {\n      if (this.state.error) {\n         return <ErrorMessage />;\n      }\n\n      return this.props.children;\n   }\n}\n\nexport default ErrorBoudary;\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./comicsList.scss\";\n\nconst ComicsList = () => {\n   const [comicsList, setComicsList] = useState([]);\n   const [newItemLoading, setnewItemLoading] = useState(false);\n   const [offset, setOffset] = useState(0);\n   const [comicsEnded, setComicsEnded] = useState(false);\n\n   const { loading, error, getAllComics } = useMarvelService();\n\n   useEffect(() => {\n      onRequest(offset, true);\n   }, []);\n\n   const onRequest = (offset, initial) => {\n      initial ? setnewItemLoading(false) : setnewItemLoading(true);\n      getAllComics(offset).then(onComicsListLoaded);\n   };\n\n   const onComicsListLoaded = (newComicsList) => {\n      let ended = false;\n      if (newComicsList.length < 8) {\n         ended = true;\n      }\n      setComicsList([...comicsList, ...newComicsList]);\n      setnewItemLoading(false);\n      setOffset(offset + 8);\n      setComicsEnded(ended);\n   };\n\n   function renderItems(arr) {\n      const items = arr.map((item, i) => {\n         return (\n            <li className=\"comics__item\" key={i}>\n               <Link to={`/comics/${item.id}`}>\n                  <img\n                     src={item.thumbnail}\n                     alt={item.title}\n                     className=\"comics__item-img\"\n                  />\n                  <div className=\"comics__item-name\">{item.title}</div>\n                  <div className=\"comics__item-price\">{item.price}</div>\n               </Link>\n            </li>\n         );\n      });\n\n      return <ul className=\"comics__grid\">{items}</ul>;\n   }\n\n   const items = renderItems(comicsList);\n\n   const errorMessage = error ? <ErrorMessage /> : null;\n   const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n   return (\n      <div className=\"comics__list\">\n         {errorMessage}\n         {spinner}\n         {items}\n         <button\n            disabled={newItemLoading}\n            style={{ display: comicsEnded ? \"none\" : \"block\" }}\n            className=\"button button__main button__long\"\n            onClick={() => onRequest(offset)}\n         >\n            <div className=\"inner\">load more</div>\n         </button>\n      </div>\n   );\n};\n\nexport default ComicsList;\n","import { Helmet } from \"react-helmet\";\n\nimport AppBanner from \"../appBanner/AppBanner\";\nimport ComicsList from \"../comicsList/ComicsList\";\nimport ErrorBoudary from \"../errorBoudary/ErrorBoudary\";\n\nconst ComicsPage = () => {\n   return (\n      <>\n         <Helmet>\n            <meta name=\"description\" content=\"Page with list of our comics\" />\n            <title>Comics page</title>\n         </Helmet>\n         <AppBanner />\n         <ErrorBoudary>\n            <ComicsList />\n         </ErrorBoudary>\n      </>\n   );\n};\n\nexport default ComicsPage;\n"],"sourceRoot":""}